version: '3.7'
services:
    # Load balancer in the cluster
    traefik:
        image: traefik:v2.9.1
        command:
            - --api.insecure=true
            - --providers.docker
            - --log.level=DEBUG
            - --entrypoints.web.address=:80
            # Internal entrypoint for communication between services, e.g.
            # api-proxy -> worker -> director.
            - --entrypoints.internal.address=:8090
            # Prevent overriding X-Forwarded headers for internal requests
            - --entryPoints.internal.forwardedHeaders.insecure
            - --providers.docker.exposedbydefault=false
        labels:
            - "traefik.enable=true"
        ports:
            - "127.0.0.1:80:80"
            - "127.0.0.1:8080:8080"
        volumes:
            - /var/run/docker.sock:/var/run/docker.sock

    # UI pointing towards the director
    director-ui4:
        image: ${REGISTRY}/ui4/ng:${FF_VERSION}
        environment:
            - FACT_FINDER_URL=http://director:8080/fact-finder
            - ANALYTICS_URL=http://analytics:9000
            - FACT_FINDER_GWT_UI_URL=http://director-gwt-ui:8080/fact-finder-ui
        labels:
            - "traefik.enable=true"
            - "traefik.http.services.ui.loadbalancer.server.port=80"
            - "traefik.http.routers.ui.rule=PathPrefix(`/fact-finder-ui`)"
            - "traefik.http.routers.ui.entrypoints=web"
            - "traefik.http.routers.ui.middlewares=\
                strip-ffui-prefix@docker"
            - "traefik.http.middlewares.strip-ffui-prefix\
                .stripprefix.prefixes=/fact-finder-ui"


    # Classic GWT UI included in ui4
    director-gwt-ui:
        image: ${REGISTRY}/ui/ng:${FF_VERSION}
        user: factfinder
        environment:
            - "JAVA_OPTS=-Dserver.url=\
              http://traefik:8090/director/fact-finder/ui/ws/soap/ -Xmx3g"

    # Director which is used to change configuration via UI, receive delta-updates, etc.
    director:
        image: ${REGISTRY}/ff/ng:${FF_VERSION}
        user: factfinder
        environment:
            # Adjust Xmx for your setup.
            - JAVA_OPTS=-Xmx3g -Dfff.node.logs.subdirectory=director
            # Internal resources directory
            - FACTFINDER_RESOURCES=/home/factfinder
            # URL pointing towards analytics internal/external
            - analytics.public.url=http://localhost/analytics
            - analytics.url=http://analytics:9000
            # Use postgres database for product data
            - importer.dialect=POSTGRES
            - importer.serverName=postgres
            # Configure client credentials for the workers. Workers must be
            # able to create oauth tokens to communicate with analytics.
            - oauth.authorization.client.ff_worker.secret=shared-secret
            # Director should use the director role
            - cluster.role=director
            # Import specific channels on startup which are configured accordingly
            - useImportOnStartup=false
            # Message queue for features like A/B testing. Change login data according to your settings.
            # For further information please refer to the RabbitMQ documentation
            - rabbitmq.uri=amqp://rabbitmquser:rabbitmqsecurepassword@rabbitmq:5672
            - trustHttpForwardedHeaders=true
        # Tune tcp keepalive settings for ipvs loadbalancer used e.g. by docker swarm.
        # See https://web.archive.org/web/20200614124130if_/https://success.docker.com/article/ipvs-connection-timeout-issue
        # for more details.
        sysctls:
            - net.ipv4.tcp_keepalive_time=600
        labels:
            - "traefik.enable=true"
            - "traefik.http.services.director.loadbalancer.server.port=8080"
            - "traefik.http.routers.director.rule=PathPrefix(`/director`)"
            - "traefik.http.routers.director.middlewares=\
                strip-director-prefix@docker"
            # Listen on external and internal entrypoints for api-proxy
            # routing.
            - "traefik.http.routers.director.entrypoints=web,internal"
            - "traefik.http.middlewares.strip-director-prefix\
                .stripprefix.prefixes=/director"
        volumes:
            # Mount resource directory for FACT-Finder configuration
            - ./resources:/home/factfinder/fact-finder

    # Worker 1 to respond to search requests. You can add more workers.
    worker-1:
        image: ${REGISTRY}/ff/ng:${FF_VERSION}
        user: factfinder
        environment:
            # Adjust Xmx for your setup.
            # Use a separate log directory per worker to avoid messing up your
            # app, search and shoppingcart logs.
            - JAVA_OPTS=-Xmx3g -Dfff.node.logs.subdirectory=worker-1
            # Internal resources directory
            - FACTFINDER_RESOURCES=/home/factfinder
            # URL pointing towards analytics
            - analytics.url=http://analytics:9000
            # Use postgres database for product data
            - importer.dialect=POSTGRES
            - importer.serverName=postgres
            # Worker should use the worker role
            # Restricts workers capabilities, e.g. a worker is not allowed to
            # do full imports.
            - cluster.role=worker
            # Configures a centralized oauth authorization server, such that
            # all tokens are valid on all workers. To make it work, all of the
            # three next variables must be set.
            - oauth.server.url=http://traefik:8090/director/fact-finder
            # The credentials must match with the director setting
            # `oauth.authorization.client`.
            - oauth.client.id=ff_worker
            - oauth.client.secret=shared-secret
            # Import specific channels on startup which are configured accordingly
            - useImportOnStartup=false
            # Automatically poll for new imports & delta updates already
            # applied on the director.
            - useClusterSync=true
            # Disable scheduled jobs on workers. If you have to use scheduled
            # jobs on your worker, make sure to configure a separate scheduler
            # directory using
            # - scheduler.directory={APP_RESOURCES}/conf/scheduler.worker/
            - useScheduledJobs=false
            # Message queue for features like A/B testing. Change login data according to your settings.
            # For further information please refer to the RabbitMQ documentation
            - rabbitmq.uri=amqp://rabbitmquser:rabbitmqsecurepassword@rabbitmq:5672
            - trustHttpForwardedHeaders=true
        # Tune tcp keepalive settings for ipvs loadbalancer used e.g. by docker swarm.
        # See https://web.archive.org/web/20200614124130if_/https://success.docker.com/article/ipvs-connection-timeout-issue
        # for more details.
        sysctls:
            - net.ipv4.tcp_keepalive_time=600
        labels:
            - "traefik.enable=true"
            - "traefik.http.services.worker.loadbalancer.server.port=8080"
            - "traefik.http.services.worker.loadBalancer.sticky.cookie.name=ff_worker"
            - "traefik.http.routers.worker.rule=PathPrefix(`/worker`)"
            - "traefik.http.routers.worker.middlewares=\
                strip-worker-prefix@docker"
            - "traefik.http.routers.worker.entrypoints=web,internal"
            - "traefik.http.middlewares.strip-worker-prefix\
                .stripprefix.prefixes=/worker"
        volumes:
            # Mount resource directory for FACT-Finder configuration
            - ./resources:/home/factfinder/fact-finder

    # Worker 2 to respond to search requests. You can add more workers.
    worker-2:
        image: ${REGISTRY}/ff/ng:${FF_VERSION}
        user: factfinder
        environment:
            # Adjust Xmx for your setup.
            # Use a separate log directory per worker to avoid messing up your
            # app, search and shoppingcart logs.
            - JAVA_OPTS=-Xmx3g -Dfff.node.logs.subdirectory=worker-2
            # Internal resources directory
            - FACTFINDER_RESOURCES=/home/factfinder
            # URL pointing towards analytics
            - analytics.url=http://analytics:9000
            # Use postgres database for product data
            - importer.dialect=POSTGRES
            - importer.serverName=postgres
            # Worker should use the worker role
            # Restricts workers capabilities, e.g. a worker is not allowed to
            # do full imports.
            - cluster.role=worker
            # Configures a centralized oauth authorization server, such that
            # all tokens are valid on all workers. To make it work, all of the
            # three next variables must be set.
            - oauth.server.url=http://traefik:8090/director/fact-finder
            # The credentials must match with the director setting
            # `oauth.authorization.client`.
            - oauth.client.id=ff_worker
            - oauth.client.secret=shared-secret
            # Import specific channels on startup which are configured accordingly
            - useImportOnStartup=false
            # Automatically poll for new imports & delta updates already
            # applied on the director.
            - useClusterSync=true
            # Disable scheduled jobs on workers. If you have to use scheduled
            # jobs on your worker, make sure to configure a separate scheduler
            # directory using
            # - scheduler.directory={APP_RESOURCES}/conf/scheduler.worker/
            - useScheduledJobs=false
            # Message queue for features like A/B testing. Change login data according to your settings.
            # For further information please refer to the RabbitMQ documentation
            - rabbitmq.uri=amqp://rabbitmquser:rabbitmqsecurepassword@rabbitmq:5672
        # Tune tcp keepalive settings for ipvs loadbalancer used e.g. by docker swarm.
        # See https://web.archive.org/web/20200614124130if_/https://success.docker.com/article/ipvs-connection-timeout-issue
        # for more details.
        sysctls:
            - net.ipv4.tcp_keepalive_time=600
        labels:
            - "traefik.enable=true"
            - "traefik.http.services.worker.loadbalancer.server.port=8080"
            - "traefik.http.services.worker.loadBalancer.sticky.cookie.name=ff_worker"
            - "traefik.http.routers.worker.rule=PathPrefix(`/worker`)"
            - "traefik.http.routers.worker.middlewares=\
                strip-worker-prefix@docker"
            - "traefik.http.routers.worker.entrypoints=web,internal"
            - "traefik.http.middlewares.strip-worker-prefix\
                .stripprefix.prefixes=/worker"
        volumes:
            # Mount resource directory for FACT-Finder configuration
            - ./resources:/home/factfinder/fact-finder

    # Translates incoming requests on /director/fact-finder/rest/v2 or
    # /director/fact-finder/rest/v3 or /director/fact-finder/rest/v4
    # to /director/fact-finder/rest/v5
    api-proxy-director:
        image: ${REGISTRY}/ff-api-proxy/ng:${FF_VERSION}
        # Set target-version to the current API version of FACT-Finder
        command: >
            --target http://traefik:8090/director/fact-finder
            --target-version 5
            --trust-proxy
        labels:
            - "traefik.enable=true"
            - "traefik.http.services.api-proxy-director\
                .loadbalancer.server.port=3000"
            - "traefik.http.routers.api-proxy-director.entrypoints=web"
            # Create rules for every API version in use below target-version beginning from v2
            - "traefik.http.routers.api-proxy-director.rule=\
                PathPrefix(`/director/fact-finder/rest/v2`) || PathPrefix(`/director/fact-finder/rest/v3`) || PathPrefix(`/director/fact-finder/rest/v4`)"
            - "traefik.http.routers.api-proxy-director.middlewares=\
                strip-api-proxy-director-prefix@docker"
            - "traefik.http.middlewares.strip-api-proxy-director-prefix.\
                stripprefix.prefixes=/director/fact-finder"

    # Translates incoming requests on /worker/fact-finder/rest/v2 or
    # /worker/fact-finder/rest/v3 or /worker/fact-finder/rest/v4 to
    # /worker/fact-finder/rest/v5
    api-proxy-worker:
        image: ${REGISTRY}/ff-api-proxy/ng:${FF_VERSION}
        # Use the internal traefik entrypoint, such that the traefik
        # load balancer will be used. If you'd point directly to the swarm
        # service, the swarm load balancer would be used without support for
        # sticky session and weights.
        #
        # Set target-version to the current API version of FACT-Finder
        command: >
            --target http://traefik:8090/worker/fact-finder
            --target-version 5
            --trust-proxy
        labels:
            - "traefik.enable=true"
            - "traefik.http.services.api-proxy-worker\
                .loadbalancer.server.port=3000"
            - "traefik.http.routers.api-proxy-worker.entrypoints=web"
            # Create rules for every API version in use below target-version beginning from v2
            - "traefik.http.routers.api-proxy-worker.rule=\
                PathPrefix(`/worker/fact-finder/rest/v2`) || PathPrefix(`/worker/fact-finder/rest/v3`) || PathPrefix(`/worker/fact-finder/rest/v4`)"
            - "traefik.http.routers.api-proxy-worker.middlewares=\
                strip-api-proxy-worker-prefix@docker"
            - "traefik.http.middlewares.strip-api-proxy-worker-prefix\
                .stripprefix.prefixes=/worker/fact-finder"

    # Analytics software to analyse FACT-Finder logfiles
    analytics:
        image: ${REGISTRY}/newlytics:${ANALYTICS_TAG}
        command: ['-Dconfig.file=/opt/docker/production.conf']
        volumes:
            - ./resources:/home/factfinder/ff
            - ./analytics/resources:/home/factfinder/analytics
            - ./analytics/production.conf:/opt/docker/production.conf
        environment:
            - LOGS_DIRECTORY=/home/factfinder/ff/logs
            - PG_DATABASE_URL=jdbc:postgresql://postgres/analytics?user=postgres
            - OAUTH_URL=http://traefik:8090/director/fact-finder
            - FF_URL=http://traefik:8090/director/fact-finder
            # Set to the current API version of FACT-Finder
            - FF_API_VERSION=v5
        # Tune tcp keepalive settings for ipvs loadbalancer used e.g. by docker swarm.
        # See https://web.archive.org/web/20200614124130if_/https://success.docker.com/article/ipvs-connection-timeout-issue
        # for more details.
        sysctls:
            - net.ipv4.tcp_keepalive_time=600
        depends_on:
            - director
            - postgres
        labels:
            - "traefik.enable=true"
            - "traefik.http.services.analytics\
                .loadbalancer.server.port=9000"
            - "traefik.http.routers.analytics.entrypoints=web"
            - "traefik.http.routers.analytics.rule=\
                PathPrefix(`/analytics`)"
            - "traefik.http.routers.analytics.middlewares=\
                strip-analytics-prefix@docker"
            - "traefik.http.middlewares.strip-analytics-prefix\
                .stripprefix.prefixes=/analytics"
        logging:
            driver: 'json-file'

    # Database for product data and delta updates
    postgres:
        image: postgres:15.0-alpine
        shm_size: 256M
        volumes:
            - ./postgres/init.sql:/docker-entrypoint-initdb.d/init.sql
        environment:
            - POSTGRES_HOST_AUTH_METHOD=trust
        # Tune tcp keepalive settings for ipvs loadbalancer used e.g. by docker swarm.
        # See https://web.archive.org/web/20200614124130if_/https://success.docker.com/article/ipvs-connection-timeout-issue
        # for more details.
        sysctls:
            - net.ipv4.tcp_keepalive_time=600

    # Message queue
    rabbitmq:
        image: rabbitmq:3.11.1-management
        volumes:
            - ./rabbitmq/rabbitmq.conf:/etc/rabbitmq/rabbitmq.conf
            - ./rabbitmq/rabbitmq.definitions:/var/lib/rabbitmq/definitions.json
